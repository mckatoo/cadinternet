{"version":3,"sources":["ng-infinite-scroll.js","app-angular.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app-angular.js","sourcesContent":["/* ng-infinite-scroll - v1.0.0 - 2013-02-23 */\nvar mod;\n\nmod = angular.module('infinite-scroll', []);\n\nmod.directive('infiniteScroll', [\n  '$rootScope', '$window', '$timeout', function($rootScope, $window, $timeout) {\n    return {\n      link: function(scope, elem, attrs) {\n        var checkWhenEnabled, handler, scrollDistance, scrollEnabled;\n        $window = angular.element($window);\n        scrollDistance = 0;\n        if (attrs.infiniteScrollDistance != null) {\n          scope.$watch(attrs.infiniteScrollDistance, function(value) {\n            return scrollDistance = parseInt(value, 10);\n          });\n        }\n        scrollEnabled = true;\n        checkWhenEnabled = false;\n        if (attrs.infiniteScrollDisabled != null) {\n          scope.$watch(attrs.infiniteScrollDisabled, function(value) {\n            scrollEnabled = !value;\n            if (scrollEnabled && checkWhenEnabled) {\n              checkWhenEnabled = false;\n              return handler();\n            }\n          });\n        }\n        handler = function() {\n          var elementBottom, remaining, shouldScroll, windowBottom;\n          windowBottom = $window.height() + $window.scrollTop();\n          elementBottom = elem.offset().top + elem.height();\n          remaining = elementBottom - windowBottom;\n          shouldScroll = remaining <= $window.height() * scrollDistance;\n          if (shouldScroll && scrollEnabled) {\n            if ($rootScope.$$phase) {\n              return scope.$eval(attrs.infiniteScroll);\n            } else {\n              return scope.$apply(attrs.infiniteScroll);\n            }\n          } else if (shouldScroll) {\n            return checkWhenEnabled = true;\n          }\n        };\n        $window.on('scroll', handler);\n        scope.$on('$destroy', function() {\n          return $window.off('scroll', handler);\n        });\n        return $timeout((function() {\n          if (attrs.infiniteScrollImmediateCheck) {\n            if (scope.$eval(attrs.infiniteScrollImmediateCheck)) {\n              return handler();\n            }\n          } else {\n            return handler();\n          }\n        }), 0);\n      }\n    };\n  }\n]);\n","(function(){\r\n    var CadInternet = angular.module('CadInternet',['infinite-scroll']);\r\n    \r\n    CadInternet.controller('RequisicoesController', function ($scope, Contents){\r\n        $scope.contents = new Contents();\r\n    });\r\n    \r\n    CadInternet.factory('Contents', [function($http){\r\n        var Contents = function(){\r\n            this.items = [];\r\n            this.busy = false;\r\n            this.page = 1;\r\n        }\r\n\r\n        Contents.prototype.nextPage = function(){\r\n//                this.items = ['1','2','3'];\r\n            var url = 'cadastros/json/status';\r\n        };\r\n\r\n        return Contents;\r\n    }])\r\n});\r\n\r\n\r\n\r\nangular.module(\"CadInternet\",[])\r\n        .controller(\"RequisicoesController\",['$scope',function($scope){\r\n                $scope.msg = \"OlÃ¡ Mundo!!!\";\r\n}]);"]}